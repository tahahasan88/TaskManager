
@model TaskManager.Web.Models.TaskViewModel

@{
    ViewData["Title"] = "Tasks";
    ViewData["Heading"] = "Tasks";
}

@section HeaderScripts {

    <link rel="stylesheet" href="../../plugins/datatables-bs4/css/dataTables.bootstrap4.min.css">
    <link rel="stylesheet" href="../../plugins/datatables-responsive/css/responsive.bootstrap4.min.css">
    <link rel="stylesheet" href="../../plugins/datatables-select/css/select.bootstrap4.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">


    <style>
        th.progressCls {
            width: 10px !important;
        }

        .select2-results__option[aria-selected=true] {
            display: none;
        }
    </style>

}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">

            @{
                if (ViewData["deletionMessage"] != null)
                {
                    <div class="alert alert-danger alert-dismissible" role="alert">
                        <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                        @ViewData["deletionMessage"]
                    </div>
                }
            }

            <div class="card">
                <div class="card-header">
                    <button id="create-task-btnId" class="btn btn-info" data-toggle="ajax-modal" data-target="#add-contact" data-url="@Url.Action("Create")">Create Task</button>
                </div>
                <div id="modal-default">
                </div>
                <div id="modal-followup">
                </div>
                <div id="modal-multiple">
                </div>
                <!-- /.card-header -->
                <div class="card-body">
                    <table id="example2" class="table table-bordered table-hover">
                        <thead>
                            <tr>
                                <th></th>
                                <th>TaskId</th>
                                <th>Title</th>
                                <th>Status</th>
                                <th class="progressCls">Progress</th>
                                <th>AssignedTo</th>
                                <th>Last Updated</th>
                                <th>Update</th>
                                <th>Created By</th>
                                <th>Target Date</th>
                                <th>ProgressVal</th>
                            </tr>
                        </thead>
                    </table>
                </div>
                <!-- /.card-body -->
            </div>
            <!-- /.card -->
            <!-- /.card -->
        </div>
        <!-- /.col -->
    </div>
    <!-- /.row -->
    <button id="take-followup-btnId" class="btn btn-info" data-toggle="ajax-modal" data-target="#add-contact1" data-url="@Url.Action("Create", "TaskFollowUps")">Follow up!</button>
    <br />
    <br />
    <div class="row">
        <div class="col-12">
            <!-- Default box -->
            <div class="card">
                <div class="card-header">
                    <i class="fa fa-filter" style="float:left" aria-hidden="true"></i>
                    <h3 class="card-title">Filters</h3>
                    <div class="card-tools">
                        <button type="button" class="btn btn-tool" data-card-widget="collapse" title="Collapse">
                            <i class="fas fa-minus"></i>
                        </button>
                    </div>
                </div>
                <div class="card-body">
                    <div class="row" style="height:40px;">
                        <div class="col-md-2">
                            <div class="form-group">
                                <label>Task Name</label>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <input id="taskNameId" type="text" class="form-control">
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <button id="clearTaskNameId" class="btn btn-default"><i class="fa fa-close"></i>Clear</button>
                            </div>
                        </div>
                    </div>
                    <div class="row" style="height:40px;">
                        <div class="col-md-2">
                            <div class="form-group">
                                <label>Status</label>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <select id="statusSelectValuesId" class="select2" multiple="multiple" data-placeholder="Select status" style="width: 100%;">
                                    <option>Not Started</option>
                                    <option>In Progress</option>
                                    <option>On Hold</option>
                                    <option>Cancelled</option>
                                    <option>Completed</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-md-4" style="text-align:left">
                            <div class="form-group">
                                <button id="clearStatusId" class="btn btn-default"><i class="fa fa-close"></i>Clear</button>
                                <button id="defaultStatusId" class="btn btn-default"><i class="far fa-circle"></i>Default</button>

                            </div>
                        </div>
                    </div>

                    <div class="row" style="height:40px;">
                        <div class="col-md-2">
                            <div class="form-group">
                                <label>Assigned To</label>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <select id="assignSelectValuesId" class="select2" multiple="multiple" data-placeholder="Select assigned to" style="width: 100%;">
                                </select>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <button id="clearAssignId" class="btn btn-default"><i class="fa fa-close"></i>Clear</button>
                                <button id="defaultAssignUserId" class="btn btn-default"><i class="fas fa-user"></i>Me</button>

                            </div>
                        </div>
                    </div>
                    <div class="row" style="height:40px;">
                        <div class="col-md-2">
                            <div class="form-group">
                                <label>Progress</label>
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <select name="progressFrom" class="form-control" id="progressFromSelectId">
                                    <option>Any</option>
                                    <option>0</option>
                                    <option>25</option>
                                    <option>50</option>
                                    <option>75</option>
                                    <option>100</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-md-1" style="text-align:center">
                            <div class="form-group">
                                <i class="fa fa-arrow-right"></i>
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <select name="progressTo" class="form-control" id="progressToSelectId">
                                    <option>Any</option>
                                    <option>0</option>
                                    <option>25</option>
                                    <option>50</option>
                                    <option>75</option>
                                    <option>100</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-md-2" style="text-align:right">
                            <div class="form-group">
                                <button id="clearProgressId" class="btn btn-default"><i class="fa fa-close"></i>Clear</button>
                            </div>
                        </div>
                    </div>
                    <div class="row" style="height:40px;">
                        <div class="col-md-2">
                            <div class="form-group">
                                <label>Target Date</label>
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <div class="input-group date" id="targetFromdate" data-target-input="nearest">
                                    <input id="fromRange" placeholder="From Date" type="text" class="form-control datetimepicker-input" data-target="#targetFromdate" />
                                    <div class="input-group-append" hidden data-target="#targetFromdate" data-toggle="datetimepicker">
                                        <div class="input-group-text"><i id="calendarFromtrigger" hidden class="fa fa-calendar"></i></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-1" style="text-align:center">
                            <div class="form-group">
                                <i class="fa fa-arrow-right"></i>
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <div class="input-group date" id="targetTodate" data-target-input="nearest">
                                    <input id="toRange" placeholder="To Date" type="text" class="form-control datetimepicker-input" data-target="#targetTodate" />
                                    <div class="input-group-append" hidden data-target="#targetTodate" data-toggle="datetimepicker">
                                        <div class="input-group-text"><i id="calendarTotrigger" hidden class="fa fa-calendar"></i></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-2" style="text-align:right">
                            <div class="form-group">
                                <button id="clearTargetId" class="btn btn-default"><i class="fa fa-close"></i>Clear</button>
                            </div>
                        </div>
                    </div>
                    <div class="row" style="height:40px;">
                        <div class="col-md-2">
                            <div class="form-group">
                                <label>Created By</label>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <input id="createdById" type="text" class="form-control">
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <button id="clearCreatedById" class="btn btn-default"><i class="fa fa-close"></i>Clear</button>
                                <button id="defaultCreatedByUserId" class="btn btn-default"><i class="fas fa-user"></i>Me</button>

                            </div>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <button type="button" id="filter-submit-id" class="btn btn-primary">Apply</button>
                    <button type="button" id="filter-reset-id" class="btn btn-default" data-dismiss="modal">Reset</button>
                </div>
            </div>
        </div>
        <!-- /.card -->
    </div>
</div>


<div class="row">
    <div class="col-12">
        <!-- Default box -->
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">Summary</h3>
                <div class="card-tools">
                    <button type="button" class="btn btn-tool" data-card-widget="collapse" title="Collapse">
                        <i class="fas fa-minus"></i>
                    </button>
                </div>
            </div>
            <div class="card-body">
                <div class="row" id="summaryRow">
                    <div class="col-6 col-md-3 text-center">
                        <input id="pendingTasksId" type="text" class="knob" value="30" data-width="120" data-height="120"
                               data-fgColor="#3c8dbc">

                        <div class="knob-label">PENDING</div>
                    </div>
                    <div class="col-6 col-md-3 text-center">
                        <input id="completedTasksId" type="text" class="knob" value="30" data-width="120" data-height="120"
                               data-fgColor="#3c8dbc">
                        <div class="knob-label">COMPLETED</div>
                    </div>
                    <div class="col-6 col-md-3 text-center">
                        <input id="onHoldTaskId" type="text" class="knob" value="30" data-width="120" data-height="120"
                               data-fgColor="#3c8dbc">
                        <div class="knob-label">ONHOLD</div>
                    </div>
                    <div class="col-6 col-md-3 text-center">
                        <input id="totalTasksId" type="text" class="knob" value="30" data-width="120" data-height="120"
                               data-fgColor="#3c8dbc">
                        <div class="knob-label">TOTAL</div>
                    </div>
                </div>
            </div>
        </div>
        <!-- /.card -->
    </div>

</div>
<input type="text" id="progressFromId" value="0" hidden />
<input type="text" id="progressToId" value="50" hidden />
</div>
<!-- /.container-fluid -->

@section BodyScripts {
    <script src="../../plugins/datatables/jquery.dataTables.min.js"></script>
    <script src="../../plugins/datatables-bs4/js/dataTables.bootstrap4.min.js"></script>
    <script src="../../plugins/datatables-responsive/js/dataTables.responsive.min.js"></script>
    <script src="../../plugins/datatables-responsive/js/responsive.bootstrap4.min.js"></script>
    <script src="../../plugins/datatables-select/js/select.bootstrap4.min.js"></script>
    <script src="../../plugins/datatables-select/js/dataTables.select.min.js"></script>
    <script src="https://timeago.yarp.com/jquery.timeago.js" type="text/javascript"></script>
    <script src="../../plugins/select2/js/select2.full.min.js"></script>


    <script>
        $(document).ready(function() {

            //Initialize Select2 Elements
            $('.select2').select2();
            var progressFrom = '0';
            var progressTo = '';
            var fromTargetDate = '';
            var toTargetDate = '';


            //Initialize Select2 Elements
            $('.select2bs4').select2({
                theme: 'bootstrap4'
            });

            var allEmployeeList = [];

            $('#targetFromdate').datetimepicker({
                format: 'L'
            });

            $('#targetTodate').datetimepicker({
                format: 'L'
            });

            $("#fromRange").click(function () {
                $("#calendarFromtrigger").click();
            });

             $("#toRange").click(function () {
                $("#calendarTotrigger").click();
             });

            $("#clearTaskNameId").click(function () {
                $("#taskNameId").val("");
            });

            $("#clearStatusId").click(function () {
                $("#statusSelectValuesId").val('').trigger('change');
            });

            $("#defaultStatusId").click(function () {
                $("#statusSelectValuesId").val('').trigger('change');
                $("#statusSelectValuesId").val($("#statusSelectValuesId option:first").val()).trigger('change');
            });

            $("#defaultAssignUserId").click(function () {
                $("#assignSelectValuesId").val('').trigger('change');
                currentUserName = "@Model.CurrentUserName";
                //currentUserName = 'Kashif';
                $("#assignSelectValuesId").val(currentUserName).trigger('change');
            });

            $("#defaultCreatedByUserId").click(function () {
                currentUserName = "@Model.CurrentUserName";
                $("#createdById").val(currentUserName);
            });

            $("#clearAssignId").click(function () {
                $("#assignSelectValuesId").val('').trigger('change');
            });

            $("#clearProgressId").click(function () {
                $("#progressFromSelectId").val($("#progressFromSelectId option:first").val());
                $("#progressToSelectId").val($("#progressToSelectId option:first").val());
            });

             $("#clearTargetId").click(function () {
                 $("#fromRange").val('');
                 $("#toRange").val('');
             });

              $("#clearCreatedById").click(function () {
                  $("#createdById").val('');
            });

            $('#statusSelectValuesId').select2({
                allowClear: true,
                minimumResultsForSearch: -1,
                width: 500
            });

            $("#assignSelectValuesId").select2({
                allowClear: true,
                minimumResultsForSearch: -1,
                width: 500
            });

            $("#filter-submit-id").click(function () {

                var taskName = ($("#taskNameId").val() != "") ? $("#taskNameId").val() : "";
                var createdBy = ($("#createdById").val() != "") ? $("#createdById").val() : "";

                var selectStatuses = '';
                $('#statusSelectValuesId > option:selected').each(function() {
                    //alert($(this).text() + ' ' + $(this).val());
                    selectStatuses += $(this).val() + "|";
                });
                if (selectStatuses.length > 0) {
                    selectStatuses = selectStatuses.substring(0, selectStatuses.length - 1);
                }

                var assignedToValues = '';
                $('#assignSelectValuesId > option:selected').each(function() {
                    //alert($(this).text() + ' ' + $(this).val());
                    assignedToValues += $(this).val() + "|";
                });
                if (assignedToValues.length > 0) {
                    assignedToValues = assignedToValues.substring(0, assignedToValues.length - 1);
                }

                $('#progressFromSelectId > option:selected').each(function() {
                    //alert($(this).text() + ' ' + $(this).val());
                    progressFrom = $(this).val();
                });

                 $('#progressToSelectId > option:selected').each(function() {
                    progressTo = $(this).val();
                 });

                var isValid = true;
                if (progressTo != '') {
                    if (parseInt(progressTo) < parseInt(progressFrom)) {
                        alert('Progress range is not valid. Progress to value can not be less than progress from value');
                        isValid = false;
                    }
                }

                if ($("#fromRange").val() != '') {
                    var d = new Date($("#fromRange").val());
                    fromTargetDate = d;
                }
                if ($("#toRange").val() != '') {
                    var d = new Date($("#toRange").val());
                    toTargetDate = d;

                    if (fromTargetDate != '') {
                        if (toTargetDate.getTime() < fromTargetDate.getTime()) {
                            alert('Target to Date can not be less than Target from range');
                            isValid = false;
                        }
                    }
                }

                if (isValid) {
                    tasksTable.column(2).search(taskName, true, false)
                        .column(3).search(selectStatuses, true, false)
                        .column(5).search(assignedToValues, true, false)
                        .column(8).search(createdBy, true, false)
                        .draw();
                }
            });


            $("#filter-reset-id").click(function () {

                $("#taskNameId").val("");

                $("#statusSelectValuesId").val('').trigger('change');
                $("#assignSelectValuesId").val('').trigger('change');
                $("#progressFromSelectId").val($("#progressFromSelectId option:first").val());
                $("#progressToSelectId").val($("#progressToSelectId option:first").val());
                $("#fromRange").val('');
                progressFrom = '0';
                progressTo = '';
                $("#toRange").val('');
                $("#createdById").val('');
                fromTargetDate = '';
                toTargetDate = '';

                 tasksTable.column(2).search('', true, false)
                .column(3).search('', true, false)
                .column(5).search('', true, false)
                .column(8).search('', true, false)
                .draw();
            });


            var summaryplaceHolder = $("#summaryRow");

            var thisPage = '../tasks';
            $(".nav-sidebar .nav-item .nav-link").each(function () {
                $(this).removeClass("active");
                var href = $(this).attr('href');
                if (href == thisPage) {
                    $(this).addClass('active');
                }
            });


            function validateTargetDateFilter(thisTargetDate) {

                if (thisTargetDate != '') {
                    thisTargetDate = new Date(thisTargetDate);
                }
                var min = '';
                if (fromTargetDate != '') {
                    min = new Date(fromTargetDate);;
                }

                if (min != '') {
                    if (toTargetDate != '') {
                        var max = new Date(toTargetDate);
                        max.setHours(max.getHours() + 23);
                        if (thisTargetDate.getTime() >= min.getTime() && thisTargetDate <= max.getTime()) {
                            return true;
                        }
                        else
                            return false;
                    }
                    else {
                        if (thisTargetDate.getTime() >= min.getTime()) {
                            return true;
                        }
                        else
                            return false;
                    }
                }
                else {
                    min = new Date('0001-01-01T00:00:00');
                    if (toTargetDate != '') {
                        var max = new Date(toTargetDate);
                        max.setHours(max.getHours() + 23);
                        if (thisTargetDate.getTime() >= min.getTime() && thisTargetDate.getTime() <= max.getTime()) {
                            return true;
                        }
                        else
                            return false;
                    }
                    else if (thisTargetDate.getTime() >= min.getTime()) {
                        return true;
                    }
                    else
                        return false;
                }
            }


            function validateProgressFilter(thisProgress) {
                 if (isNaN(progressFrom)) {
                        progressFrom = '0';
                    }
                    thisProgress = parseInt(thisProgress);
                    var min = parseInt(progressFrom);
                    if (min != 0) {
                        if (progressTo != 'Any' && progressTo != '') {
                            var max = parseInt(progressTo);
                            if (thisProgress >= min && thisProgress <= max) {
                                return true;
                            }
                            else
                                return false;
                        }
                        else {
                            if (thisProgress >= min) {
                                return true;
                            }
                            else
                                return false;
                        }
                    }
                    else {
                        if (progressTo != 'Any' && progressTo != '') {
                            var max = parseInt(progressTo);
                            if (thisProgress >= min && thisProgress <= max) {
                                return true;
                            }
                            else
                                return false;
                        }
                        else if (thisProgress >= min) {
                            return true;
                        }
                        else
                            return false;
                    }
            }


            /* Custom filtering function which will search data in column four between two values */
            $.fn.dataTable.ext.search.push(
                function (settings, data, dataIndex) {
                    var isValid = validateProgressFilter(data[10]);
                    if (isValid) {
                        isValid = validateTargetDateFilter(data[9]);
                    }
                    //console.log(targetDate.getDate());
                    //if ( ( isNaN( min ) && isNaN( max ) ) ||
                    //     ( isNaN( min ) && progress <= max ) ||
                    //     ( min <= progress   && isNaN( max ) ) ||
                    //     ( min <= progress   && progress <= max ) )
                    //{
                    //    return true;
                    //}
                    //return false;
                    return isValid;
                }
            );


            var baseUrl = "@Html.Raw(this.Context.Request.Scheme + "://" + this.Context.Request.Host + this.Context.Request.Path)";
            var tasksTable = $('#example2')
                .on('init.dt', function () {
                    $(".knob").knob({});
                }).on('page.dt', function () {
                    setTimeout(
                    function()
                    {
                            $(".knob").knob({});
                    }, 100);
                }).
                DataTable({
                //scrollY:        300,
                //scrollX:        true,
                //scrollCollapse: true,
                paging:         true,
                //fixedColumns:   {
                //    leftColumns: 2
                //},

                columnDefs: [ {
                    orderable: false,
                    className: 'select-checkbox',
                    targets:   0
                }, {
                        targets: -1,
                        className: 'dt[-head|-body]-center'
                    }
                    ],
                select: {
                    //style:    'os',
                    style:    'multiple',
                    selector: 'td:first-child'
                    },
                search: {regex: true, caseInsensitive: true},
                 ajax: {
                    "url": baseUrl + "/LoadTasksData",
                    "type": "POST",
                    "datatype": "json"
                 },
                 columns: [
                     {
                        data: null, render: function (data, type, row)
                        {
                            return "";
                        }
                    },
                    { "data" : "taskId", "name": "TaskId", "autoWidth": true, "visible" : false, "searchable" : true},
                    { "data": "title", "name": "Title", "autoWidth": true },
                    {
                         "render": function (data, type, full, meta)
                        {
                             if (full.status == "Not Started") {
                                 return '<span class="badge badge-danger">Not Started</span>';
                             }
                             else
                             if (full.status == "In Progress") {
                                 return '<span class="badge badge-warning text-white"> In Progress</span > ';
                             }
                             else
                             if (full.status == "On Hold") {
                                return '<span class="badge badge-secondary">On Hold</span>';
                             }
                             else
                             if (full.status == "Cancelled") {
                                return '<span class="badge badge-secondary">Cancelled</span>';
                             }
                             else
                                 return '<span class="badge badge-success">Completed</span>';
                         }
                    },
                     {

                         "render": function (data, type, full, meta) {
                              return '<input type =\"text\" class=\"knob\" value=\"'+ full.progress+ '%'+'\" data-width=\"50\" data-height=\"50\"' +
                                "data-fgColor=\"#3c8dbc\">";
                         }
                    },

                    { "data": "assignedTo", "name": "AssignedTo", "autoWidth": true },
                    {
                        "render": function (data, type, full, meta) {
                            return '<a href="javascript:void(null);" title="'+full.lastUpdated+'" name="lastupdatedLink">' + jQuery.timeago(full.lastUpdated) +'</a>';
                         }
                    },
                    {
                        "render": function (data, type, full, meta)
                        { return '<a class="btn btn-info" href="' + baseUrl + '/Edit?id=' + full.taskId + '">Edit</a>'; }
                     },
                    { "data": "createdBy", "name": "Created By", "autoWidth": true, "visible": false, "searchable": true },
                    { "data": "targetDate", "name": "Target Date", "autoWidth": true, "visible": false, "searchable": true },
                    { "data" : "progress", "name": "ProgressVal", "autoWidth": true, "visible" : false, "searchable" : true},
                ],
                order: [[ 1, 'desc' ]]
            });

            var taskCreationPlaceHolder = $('#modal-default');
            var taskMultipleCreationPlaceHolder = $('#modal-multiple');
            var taskFollowUpPlaceHolder = $('#modal-followup');

             $("#create-task-btnId").click(function () {
                var $buttonClicked = $(this);
                //var id = $buttonClicked.attr('data-id');
                var options = { "backdrop": "static", keyboard: true };
                $.ajax({
                    type: "GET",
                    url:  baseUrl + "/Create",
                    contentType: "application/json; charset=utf-8",
                    data:null,
                    datatype: "json",
                    success: function (data) {
                        taskCreationPlaceHolder.html(data);
                        taskCreationPlaceHolder.find('.modal').modal(options);
                        taskCreationPlaceHolder.find('.modal').modal('show');

                        $("#addMultipleCreationLink").click(function () {
                            $.ajax({
                                type: "GET",
                                url:  baseUrl + "/CreateMultiple",
                                contentType: "application/json; charset=utf-8",
                                data:null,
                                datatype: "json",
                                success: function (data) {
                                    taskMultipleCreationPlaceHolder.html(data);
                                    taskMultipleCreationPlaceHolder.find('.modal').modal(options);
                                    taskMultipleCreationPlaceHolder.find('.modal').modal('show');

                                },
                                error: function () {
                                    alert("Dynamic content load failed.");
                                }
                            });
                        });
                    },
                    error: function () {
                        alert("Dynamic content load failed.");
                    }
                });
             });



            $("#take-followup-btnId").click(function () {
                var $buttonClicked = $(this);

                var row_data = tasksTable.rows('.selected').data();
                if (row_data.length > 0) {
                    var options = { "backdrop": "static", keyboard: true };
                    $.ajax({
                        type: "GET",
                        url: baseUrl.replace("/tasks", "/taskfollowups") + "/Create",
                        contentType: "application/json; charset=utf-8",
                        data: null,
                        datatype: "json",
                        success: function (data) {
                            taskFollowUpPlaceHolder.html(data);
                            taskFollowUpPlaceHolder.find('.modal').modal(options);
                            taskFollowUpPlaceHolder.find('.modal').modal('show');
                        },
                        error: function () {
                            alert("Dynamic content load failed.");
                        }
                    });
                }
                else {
                    alert("Please select task");
                }
            });


            function getSummaryInfo() {

                var summaryRow = "<div class=\"col-6 col-md-3 text-center\">" +
                    "<input id=\"pendingTasksId\" type=\"text\" class=\"knob\" value=\"summaryValue\" data-width=\"120\" data-height=\"120\"" +
                            "data-fgColor=\"#f56954\">" +
                    "<div class=\"knob-label\">summaryType</div>" +
                    "</div>";
                var completeSummaryHtml = "";

                $.ajax({
                    type: "GET",
                    url: baseUrl.replace("tasks", "") + "TaskSummary/list",
                    contentType: "application/json; charset=utf-8",
                    data: null,
                    datatype: "json",
                    success: function (data) {
                        $.each(data, function (i, val) {
                            tmpData = data[i];

                            $("#pendingTasksId").val(tmpData.pendingTasksCount);
                            $("#completedTasksId").val(tmpData.completedTasksCount);
                            $("#onHoldTaskId").val(tmpData.onHoldTasksCount);
                            $("#totalTasksId").val(tmpData.totalTasksCount);
                            $("input.knob").trigger('change');
                        });
                    },
                    error: function () {
                        alert("Dynamic content load failed.");
                    }
                });
            }


            function getAllEmployees() {
                    assignSelectValuesId
                    $.ajax({
                    type: "GET",
                    url: baseUrl.replace("tasks", "") + "TaskEmployees/AllEmployees",
                    contentType: "application/json; charset=utf-8",
                    data: null,
                    datatype: "json",
                    success: function (data) {
                        $.each(data, function (i, val) {
                            tmpData = data[i];
                            $.each(tmpData, function (i, val) {
                                allEmployeeList.push(tmpData[i].userName);
                                 var o = new Option(tmpData[i].userName, tmpData[i].userName);
                                /// jquerify the DOM object 'o' so we can use the html method
                                $(o).html(tmpData[i].userName);
                                $("#assignSelectValuesId").append(o);
                            });
                        });
                    },
                    error: function () {
                        alert("Dynamic content load failed.");
                    }
                });
            }

            taskFollowUpPlaceHolder.on('click', '[data-save="modal"]', function (event) {
                event.preventDefault();

                var row_data = tasksTable.rows('.selected').data();
                var listOfTaskIds = "";
                $.each(row_data, function (i, val) {
                    tmpData = row_data[i];
                    listOfTaskIds += tmpData["taskId"] + ","
                });
                listOfTaskIds = listOfTaskIds.substring(0, listOfTaskIds.length - 1);
                $("#ListofTasks").val(listOfTaskIds);

                var form = $(this).parents('.modal').find('form');
                var actionUrl = form.attr('action');
                var dataToSend = form.serialize();
                $("#spinnerFollowUpCreate").show();

                $.post(actionUrl, dataToSend).done(function (data) {
                    var newBody = $('.modal-body', data);
                    $("#spinnerFollowUpCreate").hide();
                    taskFollowUpPlaceHolder.find('.modal-body').replaceWith(newBody);
                    var isValid = newBody.find('[name="IsValid"]').val() == 'True';
                    if (isValid) {
                        taskFollowUpPlaceHolder.find('.modal').modal('hide');
                        tasksTable.ajax.reload(function () {
                             setTimeout(
                                function()
                                {
                                        $(".knob").knob({});
                                }, 100);
                        });
                    }
                });
            });


            taskMultipleCreationPlaceHolder.on('click', '[data-save="modal"]', function (event) {
                event.preventDefault();
                var enteredText = $(this).parents('.modal').find('#ListOfTaskTitles').val();
                var rows = enteredText.split(/\r?\n/);
                var listOfTaskNames = "";
                for (var i = 0; i < rows.length; i++) {
                    if (rows[i].trim() != "") {
                        listOfTaskNames += rows[i] + ","
                    }
                }
                listOfTaskNames = listOfTaskNames.substring(0, listOfTaskNames.length - 1);
                $("#ListOfTaskTitles").val(listOfTaskNames);
                $(this).parents('.modal').find('#Target').val($("#Target").val());
                $(this).parents('.modal').find('#TaskProgress').val($("#TaskProgress").val());
                $(this).parents('.modal').find('#Description').val($("#Description").val());
                $(this).parents('.modal').find('#PriorityId').val($("#PriorityId").val());
                $(this).parents('.modal').find('#AssigneeCode').val($("#AssigneeCode").val());

                var form = $(this).parents('.modal').find('form');
                var actionUrl = form.attr('action');
                var dataToSend = form.serialize();
                var buttonClickedId = $(this).attr('id');
                $.post(actionUrl, dataToSend).done(function (data) {
                    var newbody = $('.modal-body', data);
                    taskMultipleCreationPlaceHolder.find('.modal-body').replaceWith(newbody);
                    var isValid = newbody.find('[name="IsValid"]').val() == 'True';
                    if (isValid) {

                        taskMultipleCreationPlaceHolder.find('.modal').modal('hide');
                        taskCreationPlaceHolder.find('.modal').modal('hide');
                        tasksTable.ajax.reload(function () {
                             setTimeout(
                                function()
                                {
                                        $(".knob").knob({});
                                }, 100);
                        });
                    }
                });
            });

            taskCreationPlaceHolder.on('click', '[data-save="modal"]', function (event) {
                event.preventDefault();

                var form = $(this).parents('.modal').find('form');
                var actionUrl = form.attr('action');
                var dataToSend = form.serialize();
                var buttonClickedId = $(this).attr('id');
                $("#spinnerCreate").show();

                $.post(actionUrl, dataToSend).done(function (data) {
                    var newbody = $('.modal-body', data);
                    taskCreationPlaceHolder.find('.modal-body').replaceWith(newbody);
                    var isValid = newbody.find('[name="IsValid"]').val() == 'True';
                    $("#spinnerCreate").hide();
                    if (isValid) {
                        if (buttonClickedId == "task-submit-btnId") {
                            taskCreationPlaceHolder.find('.modal').modal('hide');
                        }
                        else {
                            alert("Task added");
                        }
                        tasksTable.ajax.reload(function () {
                             setTimeout(
                                function()
                                {
                                        $(".knob").knob({});
                                }, 100);
                        });
                    }
                });
            });

            getAllEmployees();
            getSummaryInfo();

        });
    </script>
}
