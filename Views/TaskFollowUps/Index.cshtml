
@{
    ViewData["Title"] = "Tasks";
    ViewData["Heading"] = "Follow Ups";
}

@section HeaderScripts {
    <link rel="stylesheet" href="../../plugins/datatables-bs4/css/dataTables.bootstrap4.min.css">
    <link rel="stylesheet" href="../../plugins/datatables-responsive/css/responsive.bootstrap4.min.css">
    <link rel="stylesheet" href="../../plugins/datatables-select/css/select.bootstrap4.min.css">
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">Inbox</h3>
                </div>
                <!-- /.card-header -->
                <div class="card-body">
                    <table id="inboxTable" class="table table-bordered table-hover">
                        <thead>
                            <tr>
                                <th>Follow Up From</th>
                                <th>Date</th>
                                <th>Remarks</th>
                                <th>Tasks</th>
                                <th>Status</th>
                            </tr>
                        </thead>
                    </table>
                </div>
                <!-- /.card-body -->
            </div>
            <!-- /.card -->
            <!-- /.card -->
        </div>
        <!-- /.col -->
    </div>
    <!-- /.row -->
</div>
<!-- /.container-fluid -->

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">Outbox</h3>
                </div>
                <!-- /.card-header -->
                <div class="card-body">
                    <table id="outboxTable" class="table table-bordered table-hover">
                        <thead>
                            <tr>
                                <th>Date</th>
                                <th>Remarks</th>
                                <th>Tasks</th>
                                <th>Status</th>
                            </tr>
                        </thead>
                    </table>
                </div>
                <!-- /.card-body -->
            </div>
            <!-- /.card -->
            <!-- /.card -->
        </div>
        <!-- /.col -->
    </div>
    <!-- /.row -->
</div>


@section BodyScripts {
    <script src="../../plugins/datatables/jquery.dataTables.min.js"></script>
    <script src="../../plugins/datatables-bs4/js/dataTables.bootstrap4.min.js"></script>
    <script src="../../plugins/datatables-responsive/js/dataTables.responsive.min.js"></script>
    <script src="../../plugins/datatables-responsive/js/responsive.bootstrap4.min.js"></script>
    <script src="../../plugins/datatables-select/js/select.bootstrap4.min.js"></script>
    <script src="../../plugins/datatables-select/js/dataTables.select.min.js"></script>

    <script>
        $(document).ready(function() {
            //$('#example2').DataTable({
            //    "paging": true,
            //    "lengthChange": false,
            //    "searching": false,
            //    "ordering": true,
            //    "info": true,
            //    "autoWidth": false,
            //    "responsive": true,
            //});

            var thisPage = '../taskfollowups';
            $(".nav-sidebar .nav-item .nav-link").each(function () {
                $(this).removeClass("active");
                var href = $(this).attr('href');
                if (href == thisPage) {
                    $(this).addClass('active');
                }
            });

             var baseUrl = "@Html.Raw(this.Context.Request.Scheme + "://" + this.Context.Request.Host + this.Context.Request.Path)";
             var inboxTable = $('#inboxTable').DataTable( {
                //scrollY:        300,
                //scrollX:        true,
                //scrollCollapse: true,
                paging:         true,
                //fixedColumns:   {
                //    leftColumns: 2
                //},

                columnDefs: [ {
                    orderable: false,
                    targets:   0
                } ],
                select: {
                    //style:    'os',
                    style:    'os',
                    selector: 'td:first-child'
                 },
                 ajax: {
                    "url": baseUrl + "/LoadTaskInBoxData",
                    "type": "POST",
                    "datatype": "json"
                 },
                 columns: [
                    { "data" : "followUpFrom", "name": "Follow Up From", "autoWidth": true, "visible" : true},
                    { "data": "updatedDate", "name": "Date", "autoWidth": true },
                    { "data": "remarks", "name": "Remarks", "autoWidth": true },
                    {
                        "render": function (data, type, full, meta) {
                            return '<a href="' + baseUrl.replace("taskfollowups", "") + 'tasks/Edit?id=' + full.taskInfo + '"><u>' + full.taskInfo +'</u> </a>';
                         }
                    },
                    {
                        "render": function (data, type, full, meta) {
                        if (full.status == "Not Started") {
                            return '<span class="badge badge-danger">Not Started</span>';
                        }
                        else
                        if (full.status == "In Progress") {
                            return '<span class="badge badge-warning text-white"> In Progress</span > ';
                        }
                        else
                        if (full.status == "On Hold") {
                            return '<span class="badge badge-secondary">On Hold</span>';
                        }
                        else
                        if (full.status == "Cancelled") {
                            return '<span class="badge badge-secondary">Cancelled</span>';
                        }
                        else
                            return '<span class="badge badge-success">Completed</span>';
                        }
                     }
                ],
                order: [[ 1, 'desc' ]]
             });


            
                var outboxTable = $('#outboxTable').DataTable( {
                //scrollY:        300,
                //scrollX:        true,
                //scrollCollapse: true,
                paging:         true,
                //fixedColumns:   {
                //    leftColumns: 2
                //},
                select: {
                    //style:    'os',
                    style:    'multiple',
                    selector: 'td:first-child'
                 },
                 ajax: {
                    "url": baseUrl + "/LoadTaskOutBoxData",
                    "type": "POST",
                    "datatype": "json"
                 },
                 columns: [
                    { "data" : "followUpDate", "name": "Date", "autoWidth": true, "visible" : true},
                    { "data": "remarks", "name": "Remarks", "autoWidth": true },
                    {
                        "render": function (data, type, full, meta) {
                            return '<a href="' + baseUrl.replace("taskfollowups", "") + 'tasks/Edit?id=' + full.taskInfo + '"><u>' + full.taskInfo +'</u> </a>';
                         }
                    },
                    {
                        "render": function (data, type, full, meta) {
                        if (full.status == "Not Started") {
                            return '<span class="badge badge-danger">Not Started</span>';
                        }
                        else
                        if (full.status == "In Progress") {
                            return '<span class="badge badge-warning text-white"> In Progress</span > ';
                        }
                        else
                        if (full.status == "On Hold") {
                            return '<span class="badge badge-secondary">On Hold</span>';
                        }
                        else
                        if (full.status == "Cancelled") {
                            return '<span class="badge badge-secondary">Cancelled</span>';
                        }
                        else
                            return '<span class="badge badge-success">Completed</span>';
                        }
                     }
                ],
                order: [[ 1, 'desc' ]]
             });


        });
    </script>
}