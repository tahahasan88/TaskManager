
@{
    ViewData["Title"] = "Tasks";
    ViewData["Heading"] = "Tasks";
}

@section HeaderScripts {
    <link rel="stylesheet" href="../../plugins/datatables-bs4/css/dataTables.bootstrap4.min.css">
    <link rel="stylesheet" href="../../plugins/datatables-responsive/css/responsive.bootstrap4.min.css">
    <link rel="stylesheet" href="../../plugins/datatables-select/css/select.bootstrap4.min.css">
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">

            @{
                if (ViewData["deletionMessage"] != null)
                {
                    <div class="alert alert-danger" role="alert">
                        @ViewData["deletionMessage"]
                    </div>
                }
            }

            <div class="card">
                <div class="card-header">
                    <button id="create-task-btnId" class="btn btn-info" data-toggle="ajax-modal" data-target="#add-contact" data-url="@Url.Action("Create")">Create Task</button>
                </div>
                <div id="modal-default">
                </div>
                <div id="modal-followup">
                </div>
                <div id="modal-multiple">
                </div>
                <!-- /.card-header -->
                <div class="card-body">
                    <table id="example2" class="table table-bordered table-hover">
                        <thead>
                            <tr>
                                <th></th>
                                <th>TaskId</th>
                                <th>Title</th>
                                <th>Status</th>
                                <th>Progress</th>
                                <th>AssignedTo</th>
                                <th>Last Updated</th>
                                <th>Update</th>
                            </tr>
                        </thead>
                    </table>
                </div>
                <!-- /.card-body -->
            </div>
            <!-- /.card -->
            <!-- /.card -->
        </div>
        <!-- /.col -->
    </div>
    <!-- /.row -->
    <button id="take-followup-btnId" class="btn btn-info" data-toggle="ajax-modal" data-target="#add-contact1" data-url="@Url.Action("Create", "TaskFollowUps")">Follow up!</button>
    <br />
    <br />
    <div class="row">
        <div class="col-12">
            <!-- Default box -->
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">Filters</h3>
                    <div class="card-tools">
                        <button type="button" class="btn btn-tool" data-card-widget="collapse" title="Collapse">
                            <i class="fas fa-minus"></i>
                        </button>
                    </div>
                </div>
            </div>
            <!-- /.card -->
        </div>
    </div>

    <div class="row">
        <div class="col-12">
            <!-- Default box -->
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">Summary</h3>
                    <div class="card-tools">
                        <button type="button" class="btn btn-tool" data-card-widget="collapse" title="Collapse">
                            <i class="fas fa-minus"></i>
                        </button>
                    </div>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-6 col-md-3 text-center">
                            <input id="pendingTasksId" type="text" class="knob" value="30" data-width="120" data-height="120"
                                   data-fgColor="#f56954">

                            <div class="knob-label">PENDING</div>
                        </div>
                        <div class="col-6 col-md-3 text-center">
                            <input id="completedTasksId" type="text" class="knob" value="30" data-width="120" data-height="120"
                                   data-fgColor="#f56954">
                            <div class="knob-label">COMPLETED</div>
                        </div>
                        <div class="col-6 col-md-3 text-center">
                            <input id="onHoldTaskId" type="text" class="knob" value="30" data-width="120" data-height="120"
                                   data-fgColor="#f56954">
                            <div class="knob-label">ONHOLD</div>
                        </div>
                        <div class="col-6 col-md-3 text-center">
                            <input id="totalTasksId" type="text" class="knob" value="30" data-width="120" data-height="120"
                                   data-fgColor="#f56954">
                            <div class="knob-label">TOTAL</div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- /.card -->
        </div>
    </div>
</div>
    <!-- /.container-fluid -->

    @section BodyScripts {
        <script src="../../plugins/datatables/jquery.dataTables.min.js"></script>
        <script src="../../plugins/datatables-bs4/js/dataTables.bootstrap4.min.js"></script>
        <script src="../../plugins/datatables-responsive/js/dataTables.responsive.min.js"></script>
        <script src="../../plugins/datatables-responsive/js/responsive.bootstrap4.min.js"></script>
        <script src="../../plugins/datatables-select/js/select.bootstrap4.min.js"></script>
        <script src="../../plugins/datatables-select/js/dataTables.select.min.js"></script>

        <script>
        $(document).ready(function() {
            //$('#example2').DataTable({
            //    "paging": true,
            //    "lengthChange": false,
            //    "searching": false,
            //    "ordering": true,
            //    "info": true,
            //    "autoWidth": false,
            //    "responsive": true,
            //});

            var thisPage = '../tasks';
            $(".nav-sidebar .nav-item .nav-link").each(function () {
                $(this).removeClass("active");
                var href = $(this).attr('href');
                if (href == thisPage) {
                    $(this).addClass('active');
                }
            });

             var baseUrl = "@Html.Raw(this.Context.Request.Scheme + "://" + this.Context.Request.Host + this.Context.Request.Path)";
             var tasksTable = $('#example2').DataTable( {
                //scrollY:        300,
                //scrollX:        true,
                //scrollCollapse: true,
                paging:         true,
                //fixedColumns:   {
                //    leftColumns: 2
                //},

                columnDefs: [ {
                    orderable: false,
                    className: 'select-checkbox',
                    targets:   0
                } ],
                select: {
                    //style:    'os',
                    style:    'multiple',
                    selector: 'td:first-child'
                 },
                 ajax: {
                    "url": baseUrl + "/LoadTasksData",
                    "type": "POST",
                    "datatype": "json"
                 },
                 columns: [
                     {
                        data: null, render: function (data, type, row)
                        {
                            return "";
                        }
                    },
                    { "data" : "taskId", "name": "TaskId", "autoWidth": true, "visible" : false},
                    { "data": "title", "name": "Title", "autoWidth": true },
                    { "data": "status", "name": "Status", "autoWidth": true },
                     { "data": "progress", "name": "Progress", "autoWidth": true },
                    //{
                    //    "render": function (data, type, full, meta)
                    //    { return '<input type="text" class="knob" value='+full.progress+'% data-width="10" data-height="10" data-fgColor="#3c8dbc">'; }
                    //},

                    { "data": "assignedTo", "name": "AssignedTo", "autoWidth": true },
                    { "data": "lastUpdated", "name": "LastUpdated", "autoWidth": true },
                    {
                        "render": function (data, type, full, meta)
                        { return '<a class="btn btn-info" href="' + baseUrl + '/Edit?id=' + full.taskId + '">Edit</a>'; }
                    },
                ],
                order: [[ 1, 'desc' ]]
            });

            var taskCreationPlaceHolder = $('#modal-default');
            var taskMultipleCreationPlaceHolder = $('#modal-multiple');
            var taskFollowUpPlaceHolder = $('#modal-followup');

             $("#create-task-btnId").click(function () {
                var $buttonClicked = $(this);
                //var id = $buttonClicked.attr('data-id');
                var options = { "backdrop": "static", keyboard: true };
                $.ajax({
                    type: "GET",
                    url:  baseUrl + "/Create",
                    contentType: "application/json; charset=utf-8",
                    data:null,
                    datatype: "json",
                    success: function (data) {
                        taskCreationPlaceHolder.html(data);
                        taskCreationPlaceHolder.find('.modal').modal(options);
                        taskCreationPlaceHolder.find('.modal').modal('show');

                        $("#addMultipleCreationLink").click(function () {
                            $.ajax({
                                type: "GET",
                                url:  baseUrl + "/CreateMultiple",
                                contentType: "application/json; charset=utf-8",
                                data:null,
                                datatype: "json",
                                success: function (data) {
                                    taskMultipleCreationPlaceHolder.html(data);
                                    taskMultipleCreationPlaceHolder.find('.modal').modal(options);
                                    taskMultipleCreationPlaceHolder.find('.modal').modal('show');

                                },
                                error: function () {
                                    alert("Dynamic content load failed.");
                                }
                            });
                        });
                    },
                    error: function () {
                        alert("Dynamic content load failed.");
                    }
                });
             });

            $("#take-followup-btnId").click(function () {
                var $buttonClicked = $(this);
                //var id = $buttonClicked.attr('data-id');
                var row_data = tasksTable.rows('.selected').data();
                if (row_data.length > 0) {
                    var options = { "backdrop": "static", keyboard: true };
                    $.ajax({
                        type: "GET",
                        url: baseUrl.replace("/tasks", "/taskfollowups") + "/Create",
                        contentType: "application/json; charset=utf-8",
                        data: null,
                        datatype: "json",
                        success: function (data) {
                            taskFollowUpPlaceHolder.html(data);
                            taskFollowUpPlaceHolder.find('.modal').modal(options);
                            taskFollowUpPlaceHolder.find('.modal').modal('show');
                        },
                        error: function () {
                            alert("Dynamic content load failed.");
                        }
                    });
                }
                else {
                    alert("Please select task");
                }
            });


            function getSummaryInfo() {

                $.ajax({
                    type: "GET",
                    url: baseUrl.replace("tasks", "") + "TaskSummary/list",
                    contentType: "application/json; charset=utf-8",
                    data: null,
                    datatype: "json",
                    success: function (data) {
                        $.each(data, function (i, val) {
                            tmpData = data[i];
                            $("#pendingTasksId").val(tmpData.pendingTasksCount);
                            $("#completedTasksId").val(tmpData.completedTasksCount);
                            $("#onHoldTaskId").val(tmpData.onHoldTasksCount);
                            $("#totalTasksId").val(tmpData.totalTasksCount);
                        });
                    },
                    error: function () {
                        alert("Dynamic content load failed.");
                    }
                });
            }

            taskFollowUpPlaceHolder.on('click', '[data-save="modal"]', function (event) {
                event.preventDefault();

                var row_data = tasksTable.rows('.selected').data();
                var listOfTaskIds = "";
                $.each(row_data, function (i, val) {
                    tmpData = row_data[i];
                    listOfTaskIds += tmpData["taskId"] + ","
                });
                listOfTaskIds = listOfTaskIds.substring(0, listOfTaskIds.length - 1);
                $("#ListofTasks").val(listOfTaskIds);

                var form = $(this).parents('.modal').find('form');
                var actionUrl = form.attr('action');
                var dataToSend = form.serialize();
                $("#spinnerFollowUpCreate").show();

                $.post(actionUrl, dataToSend).done(function (data) {
                    var newBody = $('.modal-body', data);
                    $("#spinnerFollowUpCreate").hide();
                    taskFollowUpPlaceHolder.find('.modal-body').replaceWith(newBody);
                    var isValid = newBody.find('[name="IsValid"]').val() == 'True';
                    if (isValid) {
                        taskFollowUpPlaceHolder.find('.modal').modal('hide');
                        tasksTable.ajax.reload();
                    }
                });
            });


            taskMultipleCreationPlaceHolder.on('click', '[data-save="modal"]', function (event) {
                event.preventDefault();
                var enteredText = $(this).parents('.modal').find('#ListOfTaskTitles').val();
                var rows = enteredText.split(/\r?\n/);
                var listOfTaskNames = "";
                for (var i = 0; i < rows.length; i++) {
                    if (rows[i].trim() != "") {
                        listOfTaskNames += rows[i] + ","
                    }
                }
                listOfTaskNames = listOfTaskNames.substring(0, listOfTaskNames.length - 1);
                $("#ListOfTaskTitles").val(listOfTaskNames);
                $(this).parents('.modal').find('#Target').val($("#Target").val());
                $(this).parents('.modal').find('#TaskProgress').val($("#TaskProgress").val());
                $(this).parents('.modal').find('#Description').val($("#Description").val());
                $(this).parents('.modal').find('#PriorityId').val($("#PriorityId").val());
                $(this).parents('.modal').find('#AssigneeCode').val($("#AssigneeCode").val());

                var form = $(this).parents('.modal').find('form');
                var actionUrl = form.attr('action');
                var dataToSend = form.serialize();
                var buttonClickedId = $(this).attr('id');
                $.post(actionUrl, dataToSend).done(function (data) {
                    var newbody = $('.modal-body', data);
                    taskMultipleCreationPlaceHolder.find('.modal-body').replaceWith(newbody);
                    var isValid = newbody.find('[name="IsValid"]').val() == 'True';
                    if (isValid) {

                        taskMultipleCreationPlaceHolder.find('.modal').modal('hide');
                        taskCreationPlaceHolder.find('.modal').modal('hide');
                        tasksTable.ajax.reload();
                    }
                });
            });

            taskCreationPlaceHolder.on('click', '[data-save="modal"]', function (event) {
                event.preventDefault();

                var form = $(this).parents('.modal').find('form');
                var actionUrl = form.attr('action');
                var dataToSend = form.serialize();
                var buttonClickedId = $(this).attr('id');
                $("#spinnerCreate").show();

                $.post(actionUrl, dataToSend).done(function (data) {
                    var newbody = $('.modal-body', data);
                    taskCreationPlaceHolder.find('.modal-body').replaceWith(newbody);
                    var isValid = newbody.find('[name="IsValid"]').val() == 'True';
                    $("#spinnerCreate").hide();
                    if (isValid) {
                        if (buttonClickedId == "task-submit-btnId") {
                            taskCreationPlaceHolder.find('.modal').modal('hide');
                        }
                        else {
                            alert("Task added");
                        }
                        tasksTable.ajax.reload();
                    }
                });
            });

            getSummaryInfo();

        });
        </script>
    }
